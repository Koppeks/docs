# name: Feature List Update

# on:
#   schedule:
#     - cron: '0 0 * * *'  # Run every night at midnight UTC
#   workflow_dispatch:  

# permissions:
#   contents: write
#   actions: read

# jobs:
#   check-and-update-features:
#     runs-on: ubuntu-latest
#     env:
#       FEATURES_FILE: 'data/features.json'

#     steps:
#       - name: Checkout current repository
#         uses: actions/checkout@v4

#       - name: Restore cache
#         id: cache-sha
#         uses: actions/cache@v3
#         with:
#           path: .sha-cache
#           key: feature-data-sha
#           restore-keys: |
#             feature-data-sha

#       - name: Check for updates in source repository
#         id: check-updates
#         uses: actions/github-script@v7
#         with:
#               script: |
#                 const { data: sourceFile } = await github.rest.repos.getContent({
#                   owner: 'layer5labs',
#                   repo: 'meshery-extensions-packages',
#                   path: 'feature_data.json',
#                   ref: 'master'
#                 });
                
#                 // Store the latest commit SHA
#                 const latestSHA = sourceFile.sha;
                
#                 const fs = require('fs');
                
#                 // Check if we have a previous SHA
#                 let hasUpdates = true;
#                 const shaCachePath = '.sha-cache/latest-sha';
#                 if (fs.existsSync(shaCachePath)) {
#                   const lastSHA = fs.readFileSync(shaCachePath, 'utf8');
#                   hasUpdates = lastSHA !== latestSHA;
#                 }
                
#                 if (hasUpdates) {
#                   // Save the new SHA
#                   fs.mkdirSync('.sha-cache', { recursive: true });
#                   fs.writeFileSync(shaCachePath, latestSHA);
                  
#                   // Decode and save the content
#                   const content = Buffer.from(sourceFile.content, 'base64').toString('utf8');
                  
#                   // Create data directory if it doesn't exist
#                   fs.mkdirSync('data', { recursive: true });
                  
#                   // Write the new content
#                   fs.writeFileSync(process.env.FEATURES_FILE, content);
                  
#                   core.setOutput('has-updates', 'true');
#                 } else {
#                   core.setOutput('has-updates', 'false');
#                 }    

#       - name: Commit changes
#         if: steps.check-updates.outputs.has-updates == 'true'
#         uses: stefanzweifel/git-auto-commit-action@v5
#         with:
#           commit_message: "Updated feature data from source repository"
#           file_pattern: ${{ env.FEATURES_FILE }}
#           branch: master
#           commit_options: "--signoff"
#           commit_user_name: l5io
#           commit_user_email: ci@layer5.io
#           commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>

name: Feature List

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write
  actions: read

jobs:
  trigger-feature-list:
    runs-on: ubuntu-latest
    env:
      FEATURES_FILE: 'data/feature_data.json'
      SPREADSHEET_URL: 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQwzrUSKfuSRcpkp7sJTw1cSB63s4HCjYLJeGPWECsvqn222hjaaONQlN4X8auKvlaB0es3BqV5rQyz/pub?gid=1153419764&single=true&output=csv'

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install csvtojson --legacy-peer-deps

      - name: Fetch spreadsheet and process updates
        run: |
          # Download the spreadsheet
          curl -L $SPREADSHEET_URL -o .github/build/spreadsheet.csv
          ls -al

          # Process the CSV, filter data, and append to feature_data.json
          node .github/build/features-to-json.js

      - name: Commit changes
        id: commit-changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Updated feature data from spreadsheet"
          file_pattern: ${{ env.FEATURES_FILE }}
          branch: master
          commit_options: "--signoff"
          commit_user_name: l5io
          commit_user_email: ci@layer5.io
          commit_author: 'l5io <l5io@users.noreply.github.com>'